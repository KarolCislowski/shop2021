[{"D:\\Projekty\\2021\\shop2021\\src\\Components\\BasketItem\\BasketItem.js":"1","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Home.js":"2","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Payment\\Payment.js":"3","D:\\Projekty\\2021\\shop2021\\src\\index.js":"4","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Orders\\Order\\Order.js":"5","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Checkout\\Subtotal\\Subtotal.js":"6","D:\\Projekty\\2021\\shop2021\\src\\Components\\Header\\Header.js":"7","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Login\\Login.js":"8","D:\\Projekty\\2021\\shop2021\\src\\State\\reducer.js":"9","D:\\Projekty\\2021\\shop2021\\src\\Components\\PrivateRoute\\PrivateRoute.js":"10","D:\\Projekty\\2021\\shop2021\\src\\App.js":"11","D:\\Projekty\\2021\\shop2021\\src\\axios.js":"12","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Checkout\\Checkout.js":"13","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Orders\\Orders.js":"14","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Categories\\CategoryCard\\CategoryCard.js":"15","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Categories\\Categories.js":"16","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Products\\ProductCard\\ProductCard.js":"17","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Products\\Products.js":"18","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Payment\\Address\\Address.js":"19","D:\\Projekty\\2021\\shop2021\\src\\firebase.js":"20","D:\\Projekty\\2021\\shop2021\\src\\Components\\Footer\\Footer.js":"21"},{"size":1000,"mtime":1609955016814,"results":"22","hashOfConfig":"23"},{"size":539,"mtime":1610192322961,"results":"24","hashOfConfig":"23"},{"size":5327,"mtime":1610201830927,"results":"25","hashOfConfig":"23"},{"size":692,"mtime":1609587627169,"results":"26","hashOfConfig":"23"},{"size":1289,"mtime":1610204570043,"results":"27","hashOfConfig":"23"},{"size":1009,"mtime":1609687018495,"results":"28","hashOfConfig":"23"},{"size":2819,"mtime":1610191318027,"results":"29","hashOfConfig":"23"},{"size":1912,"mtime":1610134418273,"results":"30","hashOfConfig":"23"},{"size":902,"mtime":1609935581884,"results":"31","hashOfConfig":"23"},{"size":481,"mtime":1610133902278,"results":"32","hashOfConfig":"23"},{"size":2004,"mtime":1610147924781,"results":"33","hashOfConfig":"23"},{"size":161,"mtime":1610215343937,"results":"34","hashOfConfig":"23"},{"size":1000,"mtime":1610138032655,"results":"35","hashOfConfig":"23"},{"size":904,"mtime":1609954281471,"results":"36","hashOfConfig":"23"},{"size":382,"mtime":1610219966579,"results":"37","hashOfConfig":"23"},{"size":636,"mtime":1610191177688,"results":"38","hashOfConfig":"23"},{"size":961,"mtime":1610192058637,"results":"39","hashOfConfig":"23"},{"size":1050,"mtime":1610192211631,"results":"40","hashOfConfig":"23"},{"size":3221,"mtime":1610211465803,"results":"41","hashOfConfig":"23"},{"size":486,"mtime":1609610855465,"results":"42","hashOfConfig":"23"},{"size":892,"mtime":1610214123614,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"hch2br",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projekty\\2021\\shop2021\\src\\Components\\BasketItem\\BasketItem.js",["95"],"import { useStateValue } from '../../State/StateProvider'\nimport './BasketItem.css'\n\nexport const BasketItem = ({\n  id,\n  title,\n  image,\n  price,\n  rating,\n  hideButton\n}) => {\n\n  const [{ basket }, dispatch] = useStateValue()\n\n  const handleRemoveFromBasket = () => {\n    dispatch({\n      type: 'REMOVE_FROM_BASKET',\n      id: id\n    })\n  }\n  return (\n    <div className='basketItem'>\n      <img className='basketItem__image' src={image} alt='product cover' />\n\n      <div className='basketItem__info'>\n        <p className='basketItem__title'>{title}</p>\n        <p className='basketItem__price'>\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className='basketItem__rating'>\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p key={i}>‚≠ê</p>\n            ))}\n        </div>\n        {!hideButton &&\n          <button onClick={handleRemoveFromBasket}>Remove from basket</button>\n        }\n      </div>\n    </div>\n  )\n}",["96","97"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Home.js",[],["98","99"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Payment\\Payment.js",["100"],"import { Link } from 'react-router-dom'\nimport { BasketItem } from '../../Components/BasketItem/BasketItem'\nimport { useStateValue } from '../../State/StateProvider'\nimport './Payment.css'\n\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\nimport { useState } from 'react'\nimport CurrencyFormat from 'react-currency-format'\nimport { getBasketTotal } from '../../State/reducer'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport axios from '../../axios'\nimport { db } from '../../firebase'\nimport { Address } from './Address/Address'\n\nexport const Payment = () => {\n  const [{ basket, user }, dispatch] = useStateValue()\n\n  const history = useHistory()\n\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const [error, setError] = useState(null)\n  const [disabled, setDisabled] = useState(true)\n  const [succeeded, setSucceeded] = useState(false)\n  const [processing, setProcessing] = useState('')\n  const [address, setAddress] = useState({})\n\n  const [clientSecret, setClientSecret] = useState(true)\n\n  useEffect(() => {\n    const getClientSecret = async () => {\n      const basketValue = getBasketTotal(basket) * 100\n      console.log(basketValue)\n      const response = await axios({\n        method: 'post',\n        url: `/payments/create?total=${basketValue}`\n      })\n      setClientSecret(response.data.clientSecret)\n    }\n\n    getClientSecret()\n  }, [basket])\n\n  useEffect(() => {\n    if (user) {\n      db.collection('users')\n        .doc(user?.uid)\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            setAddress({\n              first_name: doc.data().first_name,\n              last_name: doc.data().last_name,\n              street: doc.data().street,\n              zip: doc.data().zip,\n              city: doc.data().city\n            })\n          }\n        })\n        .catch(err => {\n          console.log(err.message)\n        })\n    }\n  }, [user])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setProcessing(true)\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    })\n      .then(({ paymentIntent }) => {\n\n        db.collection('users')\n          .doc(user?.uid)\n          .collection('orders')\n          .doc(paymentIntent.id)\n          .set({\n            basket: basket,\n            amount: paymentIntent.amount,\n            created: paymentIntent.created,\n            address: address\n          })\n\n        setSucceeded(true)\n        setError(null)\n        setProcessing(false)\n\n        dispatch({\n          type: 'EMPTY_BASKET'\n        })\n\n        history.replace('/orders')\n      })\n  }\n\n  const handleChange = (e) => {\n    setDisabled(e.empty)\n    setError(e.error ? error.error.message : '')\n  }\n\n  return (\n    <div className='payment'>\n      <div className='payment__container'>\n        <h1>\n          Checkout\n          (<Link\n            to='/checkout'\n            style={{\n              textDecoration: 'none',\n              color: 'black'\n            }}\n          >{basket?.length} {basket?.length === 1 ? 'item' : 'items'}</Link>)\n        </h1>\n        <div className='payment__section'>\n          <div className='payment__title'>\n            <h3>Delivery Address</h3>\n          </div>\n          <Address\n            address={address} />\n        </div>\n\n        <div className='payment__section'>\n          <div className='payment__title'>\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className='payment__items'>\n            {basket?.map((e, index) => (\n              <BasketItem\n                key={`${e.id} + ${index}`}\n                id={e.id}\n                title={e.title}\n                image={e.image}\n                price={e.price}\n                rating={e.rating}\n              />))\n            }\n          </div>\n        </div>\n\n        <div className='payment__section'>\n          <div className='payment__title'>\n            <h3>Payment Method</h3>\n          </div>\n          <div className='payment__details'>\n\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n\n              <div className='payment__priceContainer'>\n                <CurrencyFormat\n                  renderText={(value) => (\n                    <h3>Order Total: {value}</h3>\n                  )}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                />\n                <button\n                  disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : 'Buy Now'}</span>\n                </button>\n              </div>\n              {error && <div>{error}</div>}\n            </form>\n            <div className='payment__test' >\n              <p>* To test this functionality use this data:\n                  <ul>\n                  <li>Card number: 4242 4242 4242 4242</li>\n                  <li>Date: 04/24</li>\n                  <li>CVV: 242</li>\n                  <li>Zip: 42424</li>\n                </ul>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}",["101","102"],"D:\\Projekty\\2021\\shop2021\\src\\index.js",[],["103","104"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Orders\\Order\\Order.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Checkout\\Subtotal\\Subtotal.js",["105"],"import './Subtotal.css'\nimport CurrencyFormat from 'react-currency-format'\nimport { useStateValue } from '../../../State/StateProvider'\nimport { getBasketTotal } from '../../../State/reducer'\nimport { useHistory } from 'react-router-dom'\n\nexport const Subtotal = () => {\n\n  const history = useHistory()\n\n  const [{ basket }, dispatch] = useStateValue()\n\n  return (\n    <div className='subtotal'>\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              Subtotal ({basket.length} items):\n              <strong>{value}</strong>\n            </p>\n            <small className='subtotal__gift'>\n              <input type='checkbox' /> This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={'text'}\n        thousandSeparator={true}\n        prefix\n        ={'$'}\n      />\n      <button onClick={() => history.push('/payment')}>Proceed to Checkout</button>\n    </div>\n  )\n}","D:\\Projekty\\2021\\shop2021\\src\\Components\\Header\\Header.js",["106"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Login\\Login.js",[],"D:\\Projekty\\2021\\shop2021\\src\\State\\reducer.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Components\\PrivateRoute\\PrivateRoute.js",["107"],"D:\\Projekty\\2021\\shop2021\\src\\App.js",["108","109"],"D:\\Projekty\\2021\\shop2021\\src\\axios.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Checkout\\Checkout.js",["110"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Orders\\Orders.js",["111"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Categories\\CategoryCard\\CategoryCard.js",["112"],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Categories\\Categories.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Products\\ProductCard\\ProductCard.js",["113"],"import './ProductCard.css'\nimport { useStateValue } from '../../../../State/StateProvider'\n\nexport const ProductCard = ({\n  id,\n  title,\n  image,\n  price,\n  rating\n}) => {\n  const [{ basket }, dispatch] = useStateValue()\n\n  const handleAddToBasket = () => {\n    dispatch({\n      type: 'ADD_TO_BASKET',\n      item: {\n        id,\n        title,\n        image,\n        price,\n        rating\n      }\n    })\n  }\n\n  return (\n    <div className='productCard'>\n      <div className='productCard__info'>\n        <p>{title}</p>\n        <p className='productCard__price'>\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className='productCard__rating'>\n          {Array(rating)\n            .fill()\n            .map((_, i) => (\n              <p key={i}>‚≠ê</p>\n            ))}\n        </div>\n      </div>\n      <img src={image} alt='product cover' />\n\n      <button onClick={handleAddToBasket}>Add to basket</button>\n    </div>\n  )\n}","D:\\Projekty\\2021\\shop2021\\src\\Pages\\Home\\Products\\Products.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Pages\\Payment\\Address\\Address.js",["114"],"import { useEffect, useState } from 'react'\nimport { db } from '../../../firebase'\nimport { useStateValue } from '../../../State/StateProvider'\nimport './Address.css'\n\nexport const Address = () => {\n  const [{ user }, dispatch] = useStateValue()\n\n  const [first_name, setFirst_name] = useState('')\n  const [last_name, setLast_name] = useState('')\n  const [street, setStreet] = useState('')\n  const [zip, setZip] = useState()\n  const [city, setCity] = useState('')\n  const [address, setAddress] = useState({})\n\n  const [editMode, setEditMode] = useState(false)\n\n  useEffect(() => {\n    if (user) {\n      db.collection('users')\n        .doc(user?.uid)\n        .get()\n        .then(doc => {\n          if (doc.exists) {\n            setAddress({\n              first_name: doc.data().first_name,\n              last_name: doc.data().last_name,\n              street: doc.data().street,\n              zip: doc.data().zip,\n              city: doc.data().city\n            })\n          }\n        })\n        .catch(err => {\n          console.log(err.message)\n        })\n    }\n  }, [editMode, user])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    db.collection('users')\n      .doc(user?.uid)\n      .set({\n        first_name,\n        last_name,\n        street,\n        zip,\n        city\n      })\n    setEditMode(false)\n  }\n  return (\n    <>\n      {(address && !editMode) ?\n        <div className='address'>\n          <p>{address.first_name} {address.last_name}</p>\n          <p>{address.street}</p>\n          <p>{address.zip} {address.city}</p>\n          <button\n            className='address__edit'\n            onClick={() => setEditMode(!editMode)}\n          >\n            Edit address\n          </button>\n        </div>\n        :\n        <form\n          className='address__form'\n          onSubmit={handleSubmit}\n        >\n          <div className='address__formRow'>\n            <span>\n              <h5>First Name:</h5>\n              <input\n                required\n                type='text'\n                value={first_name}\n                onChange={e => setFirst_name(e.target.value)}\n              />\n            </span>\n\n            <span>\n              <h5>Last Name:</h5>\n              <input\n                required\n                type='text'\n                value={last_name}\n                onChange={e => setLast_name(e.target.value)}\n              />\n            </span>\n          </div>\n\n          <h5>Street:</h5>\n          <input\n            required\n            type='text'\n            value={street}\n            onChange={e => setStreet(e.target.value)}\n          />\n          <div className='address__formRow'>\n            <span>\n              <h5>Zip:</h5>\n              <input\n                required\n                type='number'\n                value={zip}\n                onChange={e => setZip(e.target.value)}\n              />\n            </span>\n\n            <span>\n              <h5>City:</h5>\n              <input\n                required\n                type='text'\n                value={city}\n                onChange={e => setCity(e.target.value)}\n              />\n            </span>\n          </div>\n          <button>Save Address</button>\n        </form>\n      }\n    </>\n  )\n}","D:\\Projekty\\2021\\shop2021\\src\\firebase.js",[],"D:\\Projekty\\2021\\shop2021\\src\\Components\\Footer\\Footer.js",[],{"ruleId":"115","severity":1,"message":"116","line":13,"column":12,"nodeType":"117","messageId":"118","endLine":13,"endColumn":18},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"115","severity":1,"message":"125","line":72,"column":11,"nodeType":"117","messageId":"118","endLine":72,"endColumn":18},{"ruleId":"119","replacedBy":"126"},{"ruleId":"121","replacedBy":"127"},{"ruleId":"119","replacedBy":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"115","severity":1,"message":"130","line":11,"column":22,"nodeType":"117","messageId":"118","endLine":11,"endColumn":30},{"ruleId":"115","severity":1,"message":"130","line":14,"column":28,"nodeType":"117","messageId":"118","endLine":14,"endColumn":36},{"ruleId":"115","severity":1,"message":"130","line":5,"column":20,"nodeType":"117","messageId":"118","endLine":5,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":31,"column":10,"nodeType":"133","messageId":"134","endLine":31,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":47,"column":6,"nodeType":"137","endLine":47,"endColumn":8,"suggestions":"138"},{"ruleId":"115","severity":1,"message":"130","line":7,"column":28,"nodeType":"117","messageId":"118","endLine":7,"endColumn":36},{"ruleId":"115","severity":1,"message":"130","line":11,"column":20,"nodeType":"117","messageId":"118","endLine":11,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":8,"column":7,"nodeType":"141","endLine":11,"endColumn":9},{"ruleId":"115","severity":1,"message":"116","line":11,"column":12,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"115","severity":1,"message":"130","line":7,"column":20,"nodeType":"117","messageId":"118","endLine":7,"endColumn":28},"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"'payload' is assigned a value but never used.",["142"],["143"],["142"],["143"],"'dispatch' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [dispatch]",{"range":"147","text":"148"},[1192,1194],"[dispatch]"]